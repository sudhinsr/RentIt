// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentIt.Models;

namespace RentIt.Migrations
{
    [DbContext(typeof(RentItContext))]
    [Migration("20190721043910_Name field product table")]
    partial class Namefieldproducttable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("RentIt.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<int>("PhoneNo");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("RentIt.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("PhoneNo");

                    b.Property<int>("RentId");

                    b.HasKey("PaymentId");

                    b.HasIndex("RentId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("RentIt.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("RentIt.Models.ProductItem", b =>
                {
                    b.Property<int>("ProductItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("Code");

                    b.Property<int>("ProductId");

                    b.Property<string>("Remarks");

                    b.Property<int>("Status");

                    b.HasKey("ProductItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItem");
                });

            modelBuilder.Entity("RentIt.Models.Rent", b =>
                {
                    b.Property<int>("RentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("PhoneNo");

                    b.Property<int>("ProductItemId");

                    b.Property<int>("Status");

                    b.HasKey("RentId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("RentIt.Models.Payment", b =>
                {
                    b.HasOne("RentIt.Models.Rent", "Rent")
                        .WithMany("Payment")
                        .HasForeignKey("RentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentIt.Models.ProductItem", b =>
                {
                    b.HasOne("RentIt.Models.Product", "Product")
                        .WithMany("ProductItem")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentIt.Models.Rent", b =>
                {
                    b.HasOne("RentIt.Models.ProductItem", "ProductItem")
                        .WithMany("Rent")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
